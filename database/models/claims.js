/* storing the claims */
module.exports = (sequelize, DataTypes) => {
    const Claims = sequelize.define(
        "claims",
        {
            id: {
                type: DataTypes.INTEGER,
                primaryKey: true,
                autoIncrement: true,
                allowNull: false,
            },
            uuid: {
                type: DataTypes.STRING(50),
                allowNull: false,
            },
            user_id: {
                type: DataTypes.INTEGER,
                allowNull: false,
                comment: 'primary key from users tables'
            },
            quote_id: {
                type: DataTypes.INTEGER,
                allowNull: false,
                comment: 'primary key from quotes table'
            },
            proposal_id: {
                type: DataTypes.INTEGER,
                allowNull: false,
                comment: 'primary key from proposal table'
            },
            claim_partner_id: {
                type: DataTypes.INTEGER,
                allowNull: false,
                comment: 'primary key from claim partners table'
            },
            nr_sinistro: {
                type: DataTypes.BIGINT(20),
                allowNull: true,
                defaultValue: null,
                comment: 'unique number generated by insurance company when they approve the claim'
            },
            aviso_numero: {
                type: DataTypes.INTEGER,
                allowNull: true,
                defaultValue: null,
                comment: 'unique number generated by claim partner'
            },
            estimativa_prejuizo: {
                type: DataTypes.DOUBLE(20, 2),
                allowNull: true,
                defaultValue: null,
                comment: 'claimed amount by claim partner'
            },
            total_indemnity: {
                type: DataTypes.DOUBLE(20, 2),
                allowNull: true,
                defaultValue: null,
                comment: 'value being updated on the basis of claim data'
            },
            insurance_status: {
                type: DataTypes.TINYINT(4),
                allowNull: true,
                defaultValue: null,
                comment: "1: PENDENTE(PENDING), 2: ENCERRADO(CLOSED), 3: LIQUIDADO(SETTLED)"
            },
            deleted_at: {
                type: DataTypes.DATE,
                allowNull: true,
                defaultValue: null
            },
            company_id: {
                type: DataTypes.INTEGER,
                allowNull: true,
                defaultValue: null,
                comment: 'company id of the quote'
            },
            created_by_id: {
                type: DataTypes.INTEGER,
                allowNull: false,
                comment: 'primary key from users table represents which user created the quote'
            },
        },
        { timestamps: true }
    )
    return Claims;
}
